apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "multinic-agent.fullname" . }}
  labels:
    {{ include "multinic-agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{ include "multinic-agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "multinic-agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "multinic-agent.serviceAccountName" . }}
      {{- end }}
      hostNetwork: true
      hostPID: true
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DB_HOST
          value: "{{ .Values.database.host }}"
        - name: DB_PORT
          value: "{{ .Values.database.port }}"
        - name: DB_USER
          value: "{{ .Values.database.user }}"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "multinic-agent.fullname" . }}-db
              key: password
        - name: DB_NAME
          value: "{{ .Values.database.name }}"
        - name: POLL_INTERVAL
          value: "{{ .Values.agent.pollInterval }}"
        - name: LOG_LEVEL
          value: "{{ .Values.agent.logLevel }}"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: HEALTH_PORT
          value: "8080"
        - name: MAX_CONCURRENT_TASKS
          value: "{{ .Values.agent.maxConcurrentTasks }}"
        - name: BACKOFF_ENABLED
          value: "{{ .Values.agent.backoff.enabled }}"
        - name: BACKOFF_MAX_INTERVAL
          value: "{{ .Values.agent.backoff.maxInterval }}"
        - name: BACKOFF_MULTIPLIER
          value: "{{ .Values.agent.backoff.multiplier }}"
        ports:
        - name: health
          containerPort: 8080
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: health
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: netplan
          mountPath: /etc/netplan
        - name: network-scripts
          mountPath: /etc/sysconfig/network-scripts
        - name: host-root
          mountPath: /host
          readOnly: true
      volumes:
      - name: netplan
        hostPath:
          path: /etc/netplan
          type: DirectoryOrCreate
      - name: network-scripts
        hostPath:
          path: /etc/sysconfig/network-scripts
          type: DirectoryOrCreate
      - name: host-root
        hostPath:
          path: /
          type: Directory
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
